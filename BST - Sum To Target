public boolean findTarget(TreeNode root, int k) {
        if(root == null){
            return false;
        }
        
        //convert tree to sorted arr -> inorder taversal
        List<Integer> list = new ArrayList<>();
        inorderConvert(root,list);
        //use 2 pointer approach
        int i = 0, j = list.size()-1;
        while(i < j){
            int sum = list.get(i) + list.get(j);
            if(sum == k){
                return true;
            }else if(sum < k){
                i++;
            }else{
                j--;
            }
        }
        return false;
    }
    //Left -> Root -> Right
    void inorderConvert(TreeNode root,List<Integer> list){
        if(root == null){
            return;
        }
        inorderConvert(root.left,list);
        list.add(root.val);
        inorderConvert(root.right,list); 
    }
