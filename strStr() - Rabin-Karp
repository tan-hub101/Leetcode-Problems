public int strStr(String haystack, String needle) {
        
        if(haystack.isEmpty() && !needle.isEmpty()){
            return -1;
        }
        
        if(haystack.isEmpty() || needle.isEmpty()){
            return 0;
        }
        if(haystack.length() < needle.length()){
            return 0;
        }
        
        int i = 0;
        int n = needle.length();
        int h = haystack.length();
        int pHashcode = 0, tHashcode = 0, index = n-1, prime = 5381, j = n;
        int alphabetSize = 26;
        int[] power = new int[n];
        power[0] = 1;
        for(int k=1;k<n;k++){
            power[k] = power[k-1]*alphabetSize;
        }
        while(i < n){
            char c = needle.charAt(i);
            char d = haystack.charAt(i);
            pHashcode += (power[j]*(c-'a')) % prime;
            tHashcode += (power[j]*(d-'a')) % prime;
            j--;
            i++;
        }
        
        while(i < h){
            //comparing hashcode
            if(pHashcode == tHashcode && haystack.substring()){
                
            }
            //if equal -> compare strings
            //if equal -> return index
            i++;
        }  
     return -1;   
    }
