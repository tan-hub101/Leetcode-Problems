//[1,6],[2,8],[7,12],[10,16]
    public int findMinArrowShots(int[][] points) {
        if(points.length == 0){
            return 0;
        }
        Arrays.sort(points,(a,b) -> a[0]-b[0]);
        PriorityQueue<Integer> queue = new PriorityQueue<>(Collections.reverseOrder());
        queue.offer(points[0][1]);
        
        for(int i=1;i<points.length;i++){
            int start = points[i][0];
            int end = points[i][1];
            if(start <= queue.peek()){
                if(end < queue.peek()){
                    queue.poll();
                    queue.offer(end);
                }
            }else{
                queue.offer(end);
            } 
        }
        return queue.size();
    }
