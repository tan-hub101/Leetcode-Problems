class Solution {
    
    int[] dp = new int[105];
    
    public int rob(int[] nums) {
      
        Arrays.fill(dp,-1);
        int n = nums.length;
        return findMaxAmount(nums,n);
    }
    
    //Recursive
     int findMaxAmount(int[] nums,int n){
        
         if(n <= 0){
             return 0;
         }
         if(dp[n-1] != -1){
             return dp[n-1];
         }
         dp[n-1] = Math.max(nums[n-1] + findMaxAmount(nums,n-2),
                        findMaxAmount(nums,n-1));
        
         return dp[n-1];
     }
    
    //DP
   int findMaxAmount(int[] nums,int n){
        
       if(n == 0){
           return 0;
       }
       if(n == 1){
           return nums[0];
       }
        dp[0] = nums[0];
        dp[1] = Math.max(nums[0],nums[1]);
        
        for(int i=2;i<n;i++){
            dp[i] = Math.max(nums[i] + dp[i-2],dp[i-1]);
        }
        return dp[nums.length-1];
    }
}
