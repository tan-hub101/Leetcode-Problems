import java.util.Map.Entry;

class Solution {
    
    public int singleNumber(int[] nums) {
        
        //XOR
        //same bit = 0 (duplicates)
        //x with 0 -> x
        int ans = 0;
        for(int i : nums){
            ans ^= i;
        }
        return ans;
    }
}

public int singleNumber(int[] nums) {
        
        //O(N)
        Map<Integer,Integer> map = new HashMap<>();
        
        for(int i=0;i<nums.length;i++){
            map.put(nums[i],map.getOrDefault(nums[i],0)+1);
        }
        for(int j : nums){
            if(map.get(j) == 1){
                return j;
            }
        }
        return -1;
    }
    
    public int singleNumber(int[] nums) {
        
        //O(NLogN)
        Arrays.sort(nums);
        int i=0;
        for(;i<nums.length-1;){
            if(nums[i] != nums[i+1]){
                return nums[i];
            }else{
                i += 2;
            }
        }
        return nums[i];
    }
