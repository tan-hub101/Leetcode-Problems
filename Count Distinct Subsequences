public int numDistinct(String s, String t) {
        if((s.isEmpty() && t.isEmpty()) || t.isEmpty()){
            return 1;
        }
        
        if(s.isEmpty()){
            return 0;
        }
        int[][] dp = new int[s.length()][t.length()];
        for(int i=0;i<s.length();i++){
            for(int j=0;j<t.length();j++){
                dp[i][j] = -1;
            }
        }
        return find(s,t,0,0,new StringBuilder(""),dp);
    }
    int find(String s,String t,int s1,int t1,StringBuilder res,int[][] dp){
        
        if(res.length() == t.length()){
            //equal
            if(res.toString().equals(t)){
                return 1;
            }else{
                //not equal
                return 0;
            }
        }
        if(t1 >= t.length() || s1 >= s.length()){
            return 0;
        }
        if(dp[s1][t1] != -1){
            return dp[s1][t1];
        }
        if(s.charAt(s1) == t.charAt(t1)){
            StringBuilder res1 = new StringBuilder(res);
            res1.append(s.charAt(s1));
            dp[s1][t1] = find(s,t,s1+1,t1+1,res1,dp) + find(s,t,s1+1,t1,res,dp);
        }else{
            dp[s1][t1] = find(s,t,s1+1,t1,res,dp);
        }
        return dp[s1][t1];
    }
