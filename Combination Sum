class Solution {
    List<List<Integer>> result = new ArrayList<>();
    
    public List<List<Integer>> combinationSum(int[] candidates, int target) {
        
        List<Integer> list = new ArrayList<>();
        combinationSum(candidates,target,0, list);
        return result;
    }
    void combinationSum(int[] candidates,int target, int start,List<Integer> list){
        
        if(target == 0){
            result.add(new ArrayList<>(list));
            return;
        }
        if(start == candidates.length || target < 0){
            return;
        }
        for(int i=start;i<candidates.length;i++){
            if(target-candidates[i] >= 0){
            	list.add(candidates[i]);
                combinationSum(candidates,target-candidates[i],i,list);
                list.remove(Integer.valueOf(candidates[i]));
            }
        }
    }
}
