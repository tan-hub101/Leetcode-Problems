class Solution {
    //for n -> n! permutations
    List<List<Integer>> res = new ArrayList<>();
    
    public List<List<Integer>> permute(int[] nums) {
        
        find(nums,new ArrayList<>(),new HashSet<>());
        return res;
    }
    void find(int[] nums,List<Integer> list,Set<Integer> set){
        if(list.size() == nums.length){
            res.add(new ArrayList<>(list));
            return;
        }
        int start = 0;
        while(start < nums.length){
        	if(set.contains(nums[start])) {
        		start++;
        		continue;
        	}
            list.add(nums[start]);
            //constant search
            set.add(nums[start]);
            find(nums,list,set);
            start++;
            //Backtrack -> reversing
            Integer element = list.get(list.size()-1);
            list.remove(element);
            set.remove(element);
        }  
    }
}
