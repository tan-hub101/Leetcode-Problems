static public List<Integer> preorderTraversal_iterative(TreeNode root) {
		 List<Integer> list = new ArrayList<>();
		 traversePreOrder_iterative(root,list);
		 return list;
	 }
	 static void traversePreOrder_iterative(TreeNode root, List<Integer> list) {
		 Stack<TreeNode> stack = new Stack<>();
     if(root != null){
       stack.push(root);
     }
		 while(!stack.isEmpty()) {
			TreeNode p = stack.pop();
				list.add(p.val);
        if(p.right != null){
           stack.push(p.right);
        }
				if(p.left != null){
           stack.push(p.left);
        }
	     }
	 }
