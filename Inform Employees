class Solution {
    int maxTime = 0;
    Map<Integer,List<Integer>> map;
    
     public int numOfMinutes(int n, int headID, int[] manager, int[] informTime) {
        
        if(n == 1){
            return 0;
        }
        map = new HashMap<>();
        int totalTime = 0;
        for(int i=0;i<manager.length;i++){
            if(i == headID){
                continue;
            }
            if(!map.containsKey(manager[i])){
                map.put(manager[i],new ArrayList<>());
            }
            map.get(manager[i]).add(i);
        }
         findMaxTime(headID,informTime[headID],informTime);
         return maxTime;
    }
    
    void findMaxTime(int id, int time,int[] informTime){
        maxTime = Math.max(maxTime,time);
        
        if(map.containsKey(id)){
            for(int subOrdinate : map.get(id)){
                findMaxTime(subOrdinate,time + informTime[subOrdinate],informTime);
            }
        }
    }
}
