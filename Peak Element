class Solution {
    public int findPeakElement(int[] nums){
        
        if(nums.length == 0){
            return -1;
        }
        if(nums.length == 1){
            return 0;
        }
        
        int n = nums.length - 1;
        int start = 0, end = n;
        while(start <= end){
            int mid = start + (end-start)/2;
            
            int left = mid == 0 ? Integer.MIN_VALUE : nums[mid-1];
            int right = mid == n ? Integer.MIN_VALUE : nums[mid+1];
            
            //peak element
            if(nums[mid] > left && nums[mid] > right){
                return mid;
            }
            if(nums[mid] > left){
                start = mid+1;
            }else if(nums[mid] > right){
                end = mid-1;
            }//if less than both neighbours
            else{
                if(left > right){
                    end = mid - 1;
                }else{
                    start = mid + 1;
                }
            }
        }
        return -1;
    }
}
