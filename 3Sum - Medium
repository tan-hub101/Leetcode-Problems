public List<List<Integer>> threeSum(int[] nums) {
        
        List<List<Integer>> res = new ArrayList<>();
        if(nums == null || nums.length < 3){
            return res;
        }
        Arrays.sort(nums);
        int n = nums.length;
        List<Integer> list;
        for(int i=0;i<n-2;i++){
            if(nums[i] > 0){
                break;
            } 
            //avoiding duplicate triplet
            if(i > 0 && nums[i] == nums[i-1]) continue;
            int target = 0 - nums[i];
            //find if rest arr contains 
            //a pair with this sum 
            int start = i+1, end = n-1;
            while(start < end){
                int sum = nums[start] + nums[end];
                if(sum > target){
                    end--;
                }else if(sum < target){
                    start++;
                }else{
                    list = new ArrayList<>(Arrays.asList(nums[start],nums[end],nums[i]));
                    res.add(list);
                    //avoiding duplicate triplet
                    while(start < end && nums[start] == nums[start+1]) start++;
                    while(start < end && nums[end] == nums[end-1]) end--;
                    start++;
                    end--;
                }
            }    
        }
        return res;
    }
