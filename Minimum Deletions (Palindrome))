static int findminDeletions(String str){
	    StringBuilder s = new StringBuilder(str);
	    s.reverse();
	    int n = str.length();
	    return n - LCS(str,s.toString(),n,n);
	}
	static int LCS(String s,String p,int n,int m){
	    int[][] dp = new int[n+1][m+1];
	    for(int i=0;i<n+1;i++){
	        dp[i][0] = 0;
	    }
	    for(int j=1;j<m+1;j++){
	        dp[0][j] = 0;
	    }
	    for(int i = 1;i<n+1;i++){
	        for(int j=1;j<m+1;j++){
	            if(s.charAt(i-1) == p.charAt(j-1)){
	                dp[i][j] = 1 + dp[i-1][j-1];
	            }else{
	                dp[i][j] = Math.max(dp[i][j-1],dp[i-1][j]);
	            }
	        }
	    }
	    return dp[n][m];
	}
	
	static int LCS_recursive(String s,String p,int n,int m){
	    if(n == 0 || m == 0){
	        return 0;
	    }
	    if(s.charAt(n-1) == p.charAt(m-1)){
	        return 1 + LCS(s,p,n-1,m-1);
	    }else{
	        return Math.max(LCS(s,p,n,m-1),LCS(s,p,n-1,m));
	    }
	}
