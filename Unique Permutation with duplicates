//[1,1,2]

class Solution {
    List<List<Integer>> finalResult = new ArrayList<>();
    Set<List<Integer>> result = new HashSet<>();
    
    public List<List<Integer>> permuteUnique(int[] nums) {
        List<Integer> list = new ArrayList<>();
        Map<Integer,Integer> map = new HashMap<>();
        
        find(nums,list,map);
        finalResult = result.stream().collect(Collectors.toList());  

        return finalResult;
    }
    void find(int[] nums, List<Integer> list, Map<Integer,Integer> map){
        if(list.size() == nums.length){
            result.add(new ArrayList<>(list));
            return;
        }
        for(int i=0;i<nums.length;i++){
            if(!map.containsKey(i)){
                list.add(nums[i]);
                map.put(i,nums[i]);
                find(nums,list,map);
                list.remove(list.size()-1);
                map.remove(i);
            }  
        }  
    }
}

