public boolean isValid(String s) {
        
        if(s == null || s.isEmpty()){
            return true;
        }
        Map<Character,Character> map = new HashMap<>();
        map.put('[',']');
        map.put('{','}');
        map.put('(',')');
        
        Deque<Character> stack = new LinkedList<>();
        int i = 0;
        int n = s.length();
        while(i < n){
            char c = s.charAt(i);
            //open bracket
            if(map.containsKey(c)){
                stack.push(c);
            }//closed
            else{
               if(stack.isEmpty()){
                   return false;
               }
               char top = stack.peek();
               if(c != map.get(top)){
                   return false; 
               }
               stack.pop(); 
            }
            i++;
        }
        if(!stack.isEmpty()){
            return false;
        }
        return true;
    }
