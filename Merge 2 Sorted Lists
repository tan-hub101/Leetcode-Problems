//Taking 3rd list and merging into it
// could have taken ListNode head = new ListNode()
// and returned head.next
public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        
        if(l1 == null && l2 == null){
            return null;
        }
        if(l1 == null){
            return l2;
        }
        if(l2 == null){
            return l1;
        }
        
        ListNode n = new ListNode(l1.val);
        ListNode m = new ListNode(l2.val);
        //tail
        ListNode temp = null;
        ListNode head = null;
        if(n.val == m.val) {
        	head = n;
        	n.next = m;
        	temp = m;
        	l1 = l1.next;
            l2 = l2.next;
        }else if(n.val < m.val) {
        	head = n;
        	temp = head;
        	l1 = l1.next;
        }else {
        	head = m;
        	temp = head;
        	l2 = l2.next;
        }
        
        while(l1 != null && l2 != null){
        	
            n = new ListNode(l1.val);
            m = new ListNode(l2.val);
            
            if(l1.val == l2.val){
                temp.next = n;
                n.next = m;
                temp = m; 
                l1 = l1.next;
                l2 = l2.next;
            }else if(l1.val < l2.val){
                temp.next = n;
                temp = n;
                l1 = l1.next;
            }else{
            	temp.next = m;
                temp = m;
                l2 = l2.next;
            }
        }
        while(l1 != null){
            temp.next = l1;
            temp = temp.next;
            l1 = l1.next;
        }
        while(l2 != null){
            temp.next = l2;
            temp = temp.next;
            l2 = l2.next;
        }
        return head;  
    }
